import { useRouter } from "next/router";
import { GetServerSideProps } from "next";
import { auth } from "@/lib/auth";
import { authClient } from "@/lib/auth-client";

export const getServerSideProps = (async (context) => {
  try {
    const { req } = context;

    const session = await auth.api.getSession({
      headers: req.headers as unknown as Headers,
    });

    if (!session) {
      return {
        redirect: {
          destination: "/",
          permanent: false,
        },
      };
    }

    if (session.user.role !== "admin") {
      return {
        redirect: {
          destination: "/org/signin",
          permanent: false,
        },
      };
    }

    return {
      props: {
        user: {
          name: session.user.name || "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä",
          email: session.user.email || "<–≤–∞—à_email@example.com>",
          role: session.user.role || "user",
        },
      },
    };
  } catch (error) {
    console.error("Error in getServerSideProps:", error);
    return {
      notFound: true,
    };
  }
}) satisfies GetServerSideProps;

interface AdminPanelProps {
  user: {
    name: string;
    email: string;
    role: string;
  };
}

function OrgPage({ user }: AdminPanelProps) {
  const router = useRouter();

  const menuItems = [
    {
      title: "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤",
      description: "–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–≥—Ä—ã –∏–∑ CSV —Ñ–∞–π–ª–∞",
      icon: "üîÑ",
      href: "/org/sync",
      color: "bg-blue-50 border-blue-200 hover:bg-blue-100",
    },

    {
      title: "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
      description: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏–≥—Ä—ã",
      icon: "üë•",
      href: "/org/users",
      color: "bg-green-50 border-green-200 hover:bg-green-100",
    },
    {
      title: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã",
      description: "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–æ–≤",
      icon: "üìä",
      href: "/org/telemetry",
      color: "bg-purple-50 border-purple-200 hover:bg-purple-100",
    },

    // {
    //   title: "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
    //   description: "–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö",
    //   icon: "üì•",
    //   href: "/org/export",
    //   color: "bg-yellow-50 border-yellow-200 hover:bg-yellow-100",
    // },
  ];

  const stats = [
    {
      label: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥",
      value: "24",
      change: "+3 –∑–∞ —Å–µ–≥–æ–¥–Ω—è",
    },
    { label: "–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤", value: "156", change: "–û–±–Ω–æ–≤–ª–µ–Ω–æ –≤—á–µ—Ä–∞" },
    { label: "–ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤", value: "72", change: "+12 –∑–∞ –Ω–µ–¥–µ–ª—é" },
    { label: "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä", value: "8", change: "+2 –∑–∞ –º–µ—Å—è—Ü" },
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="container mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <div>
              <h1 className="text-2xl font-bold text-gray-800">
                –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –†–æ–≥–µ–π–Ω 2025
              </h1>
              <p className="text-gray-600 mt-1">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.name}
              </p>
            </div>
            <div className="flex items-center space-x-4">
              <div className="text-right">
                <p className="text-sm text-gray-600">{user.email}</p>
                <p className="text-xs text-gray-500 capitalize">{user.role}</p>
              </div>
              <button
                onClick={async () => {
                  await authClient.signOut();
                }}
                className="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 font-medium text-sm"
              >
                –í—ã–π—Ç–∏
              </button>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8 max-w-7xl">
        {/* Stats Cards */}
        {/* <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {stats.map((stat, index) => (
            <div key={index} className="bg-white rounded-lg shadow-md p-6">
              <h3 className="text-sm font-medium text-gray-600 mb-2">
                {stat.label}
              </h3>
              <p className="text-3xl font-bold text-gray-800 mb-1">
                {stat.value}
              </p>
              <p className="text-sm text-green-600">{stat.change}</p>
            </div>
          ))}
        </div> */}

        {/* Main Content */}
        <div className="bg-white rounded-lg shadow-md p-6 mb-8">
          <h2 className="text-xl font-bold text-gray-800 mb-6">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {menuItems.map((item, index) => (
              <button
                key={index}
                onClick={() => router.push(item.href)}
                className={`p-6 rounded-lg border-2 transition-colors duration-200 text-left ${item.color}`}
              >
                <div className="flex items-start space-x-4">
                  <span className="text-2xl">{item.icon}</span>
                  <div>
                    <h3 className="font-semibold text-gray-800 mb-2">
                      {item.title}
                    </h3>
                    <p className="text-sm text-gray-600">{item.description}</p>
                  </div>
                </div>
              </button>
            ))}
          </div>
        </div>

        {/* Footer */}
        <footer className="mt-12 text-center text-gray-500 text-sm">
          <p>¬© 2025 –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –†–æ–≥–µ–π–Ω. –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞.</p>
        </footer>
      </div>
    </div>
  );
}

export default OrgPage;
